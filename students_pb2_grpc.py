# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import students_pb2 as students__pb2


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetName = channel.unary_unary(
                '/students.StudentService/GetName',
                request_serializer=students__pb2.StudentID.SerializeToString,
                response_deserializer=students__pb2.NameResponse.FromString,
                )
        self.GetAverage = channel.unary_unary(
                '/students.StudentService/GetAverage',
                request_serializer=students__pb2.StudentID.SerializeToString,
                response_deserializer=students__pb2.AverageResponse.FromString,
                )
        self.GetGroup = channel.unary_unary(
                '/students.StudentService/GetGroup',
                request_serializer=students__pb2.StudentID.SerializeToString,
                response_deserializer=students__pb2.GroupResponse.FromString,
                )


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAverage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetName,
                    request_deserializer=students__pb2.StudentID.FromString,
                    response_serializer=students__pb2.NameResponse.SerializeToString,
            ),
            'GetAverage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAverage,
                    request_deserializer=students__pb2.StudentID.FromString,
                    response_serializer=students__pb2.AverageResponse.SerializeToString,
            ),
            'GetGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroup,
                    request_deserializer=students__pb2.StudentID.FromString,
                    response_serializer=students__pb2.GroupResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'students.StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/students.StudentService/GetName',
            students__pb2.StudentID.SerializeToString,
            students__pb2.NameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAverage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/students.StudentService/GetAverage',
            students__pb2.StudentID.SerializeToString,
            students__pb2.AverageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/students.StudentService/GetGroup',
            students__pb2.StudentID.SerializeToString,
            students__pb2.GroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
